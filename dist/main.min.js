const tbody=document.getElementsByTagName("tbody")[0],rows=[].concat(...tbody.children).slice(1).map(tr=>[].concat(...tr.children).map(td=>td.innerHTML.trim())),schema=["دانشكده درس","دانشكده درس","گروه آموزشي","گروه آموزشي","شماره و گروه درس","نام درس","کل","ع","ظر فيت","ثبت نام شده","تعداد ليست انتظار","جنسيت","نام استاد","زمان و مكان ارائه/ امتحان","توضيحات"];let data={};const diagnose=exam=>{if(exam){if(1===exam.length){const time=exam[0].substring(27,38),date=exam[0].substring(7,17).replaceAll(".","-");return["exam",`${date},${time}`]}{const s=exam[0].split(" ")[1],day=s?s+" شنبه":"شنبه",time=exam[1];return[day,time]}}return""},getCol=col=>{let listed_col=col.split("<br>").map(item=>item.trim().split("شنبه").map(item=>item.trim()));listed_col=listed_col.slice(0,listed_col.length-1);const exam=listed_col.pop(),mapped_col=listed_col.map(item=>item.map((el,index)=>{if(0===index){const splitted=el.split(" ");return 1===splitted.length?"شنبه":splitted[1]+" شنبه"}return el.substring(0,11)})),diagnosed_exam=diagnose(exam);mapped_col.push(diagnosed_exam);let out={};return mapped_col.forEach(item=>out={...out,...item?{[item[0]]:item[1]}:{}}),out},_rows=rows.filter(row=>"مهندسي برق و كامپيوتر"===row[3]||"كامپيوتر"===row[3]);_rows.forEach((row,index)=>{let obj=schema.reduce((prev,current,j)=>({...prev,[current]:"زمان و مكان ارائه/ امتحان"===current?getCol(row[j]):row[j]}),[]);data={...data,[index]:obj}});let examInterferences={};for(let i=0;i<_rows.length;i++){const master=data[i]["زمان و مكان ارائه/ امتحان"].exam;for(let j=0;j<_rows.length;j++){if(j===i)continue;const slave=data[j]["زمان و مكان ارائه/ امتحان"].exam;if(slave&&master&&master===slave){const newInterferer=`${data[j]["شماره و گروه درس"]}|${data[j]["نام درس"]}|${data[j]["نام استاد"]}`,prevMasterRelations=Object.keys(examInterferences).includes(`${data[i]["شماره و گروه درس"]}|${data[i]["نام درس"]}|${data[i]["نام استاد"]}`)?[...examInterferences[`${data[i]["شماره و گروه درس"]}|${data[i]["نام درس"]}|${data[i]["نام استاد"]}`]]:[];examInterferences={...examInterferences,[`${data[i]["شماره و گروه درس"]}|${data[i]["نام درس"]}|${data[i]["نام استاد"]}`]:[...prevMasterRelations,newInterferer]}}}}const dayDictionary={"شنبه":"saturday","يك شنبه":"sunday","يک شنبه":"sunday","دو شنبه":"monday","سه شنبه":"tuesday","چهار شنبه":"wednesday"},getRange=s=>{const splitted=s.split("-").map(time=>time.split(":").map(part=>Number(part)));return[splitted[0][0]+.01*splitted[0][1],splitted[1][0]+.01*splitted[1][1]]},isRangeInterrupted=(r1,r2)=>r1[0]>r2[0]&&r1[0]<r2[1]||r1[1]>r2[0]&&r1[1]<r2[1]||r2[0]>r1[0]&&r2[0]<r1[1]||r2[1]>r1[0]&&r2[1]<r1[1]||r1[0]==r2[0],ses_int=[],getNeeds=obj=>{const first=Object.keys(obj).filter(key=>"exam"!==key),second=first.map(key=>[`${dayDictionary[key]}`,getRange(obj[key])]);return second};for(let i=0;i<_rows.length;i++){const masterObj=data[i]["زمان و مكان ارائه/ امتحان"],masterSessions=getNeeds(masterObj);for(let j=0;j<_rows.length;j++){if(j===i)continue;const slaveObj=data[j]["زمان و مكان ارائه/ امتحان"],slaveSessions=getNeeds(slaveObj);for(const ms of masterSessions)for(const ss of slaveSessions)ms[0]===ss[0]&&isRangeInterrupted(ms[1],ss[1])&&ses_int.push({[`${data[i]["شماره و گروه درس"]}|${data[i]["نام درس"]}|${data[i]["نام استاد"]}`]:`${data[j]["شماره و گروه درس"]}|${data[j]["نام درس"]}|${data[j]["نام استاد"]}`})}}let session_interfers={};ses_int.forEach((item,index)=>{const history=session_interfers[Object.keys(item)[0]],prev=history?[...history]:[];session_interfers={...session_interfers,[Object.keys(item)[0]]:[...prev,item[Object.keys(item)[0]]]}}),function(console){console.save=function(data,filename){if(data){filename||(filename="console.json"),"object"==typeof data&&(data=JSON.stringify(data,void 0,4));var blob=new Blob([data],{type:"text/json"}),e=document.createEvent("MouseEvents"),a=document.createElement("a");a.download=filename,a.href=window.URL.createObjectURL(blob),a.dataset.downloadurl=["text/json",a.download,a.href].join(":"),e.initMouseEvent("click",!0,!1,window,0,0,0,0,0,!1,!1,!1,!1,0,null),a.dispatchEvent(e)}else console.error("Console.save: No data")}}(console);const JSONData=JSON.stringify({"تداخل کلاس ها":session_interfers,"تداخل امتحانات":examInterferences}),HTML_CODE=`\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Document</title>\n  </head>\n  <body id="root">\n    <style lang="css">\n      html {\n        scroll-behavior: smooth;\n        font-size: 62.5%;\n      }\n\n      body {\n        padding: 20px 10px;\n      }\n\n      * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n      }\n\n      h1 {\n        font-size: 3rem;\n        font-weight: 600;\n        text-align: center;\n        margin-top: 50px;\n        padding-top: 50px;\n        border-top: 1px solid black;\n      }\n\n      #classes-root {\n        margin-top: 30px;\n        padding-top: 10px;\n      }\n\n      .key {\n        font-size: 2rem;\n        font-weight: 600;\n        color: rgb(28, 92, 92);\n        padding-left: 5px;\n      }\n\n      .interferer {\n        color: rgb(219, 78, 78);\n        padding-left: 10px;\n        padding: 10px 15px 0;\n      }\n\n      #search {\n        left: 10px;\n        right: 10px;\n        width: 98%;\n        line-height: 30px;\n        position: fixed;\n        padding-left: 3px;\n        font-size: 2rem;\n      }\n    </style>\n    <input id="search" type="text" />\n    <h1>تداخل امتحانات</h1>\n    <div id="exams-root"></div>\n    <h1>تداخل کلاس ها</h1>\n    <div id="classes-root"></div>\n    <script type="text/javascript" id="json-data-container"><\/script>\n      \n    <script>const JSONData = ${JSONData}<\/script>\n    <script>\n    const jsonDataContainer = document.getElementById("json-data-container")\n\n    const init = () => {\n      jsonDataContainer.innerText = ""\n    }\n    \n    const root = document.getElementById("root");\n    \n    const examsRoot = document.getElementById("exams-root");\n    const classesRoot = document.getElementById("classes-root");\n    \n    const examInterferences = JSONData["تداخل امتحانات"];\n    const classInterferences = JSONData["تداخل کلاس ها"];\n    \n    const render = (obj, root, criteria = "") => {\n      root.innerHTML = "";\n      for (const key of Object.keys(obj).filter((item) =>\n        item.includes(criteria)\n      )) {\n        const ul = document.createElement("ul");\n        ul.innerHTML = key;\n        ul.style =\n          "cursor: pointer; display: flex; flex-direction: column; padding-top: 10px;";\n        ul.classList.add("key");\n        for (const interferer of obj[key]) {\n          const li = document.createElement("li");\n          li.innerHTML = interferer;\n          li.classList.add("interferer");\n          li.style =\n            "display: none; margin-top: 10px; transition: all 0.3s ease-in-out;";\n          ul.appendChild(li);\n        }\n        ul.addEventListener("click", (e) => {\n          for (const child of [].concat(...ul.children)) {\n            child.style = "display:" + " " + child.style.display === "none" ? "unset" : "none";\n          }\n        });\n        root.appendChild(ul);\n      }\n    };\n    \n    render(examInterferences, examsRoot);\n    render(classInterferences, classesRoot);\n    \n    const input = document.getElementById("search");\n    \n    const events = {\n      criteria: "",\n    };\n    \n    input.addEventListener("keyup", (e) => {\n      const value = [...e.target.value]\n        .map((char) => (char === "ی" ? "ي" : char))\n        .map((char) => (char === "ک" ? "ك" : char))\n        .join("");\n      events.criteria = value === "undefined" ? "" : value;\n      render(examInterferences, examsRoot, events.criteria.trim());\n      render(classInterferences, classesRoot, events.criteria.trim());\n    });\n    <\/script>\n  </body>\n</html>\n`;console.save(HTML_CODE,"index.html");